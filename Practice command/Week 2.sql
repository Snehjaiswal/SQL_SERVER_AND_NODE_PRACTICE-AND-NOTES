--WEEK SECOND START

DROP TABLE COLLEGE_TEACHER
------------------------------------------------------------------------------------------------------------------
--COLLEGE_STUDENT TABEL
CREATE TABLE COLLEGE_STUDENT(
STD_ID INT IDENTITY(1,1) PRIMARY KEY,
STD_NAME NVARCHAR(20) NOT NULL,
STD_AGE INT NOT NULL CHECK (STD_AGE >=18),
STD_ADDRESS NVARCHAR (30)NOT NULL,
STD_BRANCH VARCHAR(10) CHECK ( STD_BRANCH='BCA' OR STD_BRANCH= 'BBA' OR STD_BRANCH ='BCOM' OR STD_BRANCH = 'BTECH' )
);
GO

INSERT INTO COLLEGE_STUDENT 
VALUES 
('KAMAL',19,'BARODA','BBA'),  ('NEELAM ',20,'KHANDWA','BBA'), ('POOJA',18,'RAIPUR','BCOM'),
('RAKHI',18,'PANJAB','BCOM'), ('SONAM',26,'SURAT',NULL),      ('DEEPIKA',21,'DELHI','BTECH'),
('SHRUTI',22,'INDORE',NULL),  ('DIYA',26,'BHOPAL','BCA'),     ('OM',29,'DEVAS',NULL),
('KAMAL',19,'BARODA','BBA'),  ('NEELAM ',20,'KHANDWA','BBA'), ('POOJA',18,'RAIPUR','BCOM'),
('ROCKY',18,'PANJAB','BCOM'), ('SJ',26,'SURAT','BBA'),        ('DEEPIKA',21,'DELHI','BTECH'),
('SH',22,'INDORE','BCA'),     ('DIYA',26,'BHOPAL','BCA'),     ('OM',29,'DEVAS',NULL),
('KAMAL',19,'BARODA','BBA'),  ('NEELAM ',20,'KHANDWA','BBA'), ('POOJA',18,'RAIPUR','BCOM'),
('ROCKY',18,'PANJAB','BCOM'), ('SJ',26,'SURAT','BBA'),        ('DEEPIKA',21,'DELHI','BTECH'),
('SH',22,'INDORE','BCA'),     ('DIYA',26,'BHOPAL','BCA'),     ('OM',29,'DEVAS',NULL);
-------------------------------------------------------------------------------------------------------------------------
GO
--COLLEGE_TEACHER TABEL

CREATE TABLE COLLEGE_TEACHER
( 
TEACHER_ID INT IDENTITY(1,1) PRIMARY KEY CHECK (TEACHER_ID < =4  ),
TEACHER_NAME NVARCHAR(20) NOT NULL ,
TEACHER_SALARY INT NOT NULL DEFAULT '20000',
TEACHER_BRANCH_ID INT
); 
GO 

INSERT INTO COLLEGE_TEACHER 
VALUES 
('DEEPAK SIR',30000,1),
('MAHESH SIR ',20000,4),
('SURESH SIR',11800,2),
('KAMLESH SIR',29000,3);
SELECT* FROM COLLEGE_TEACHER
GO  
CREATE TABLE COLLEGE_BRANCH 
(
BRANCH_ID INT IDENTITY(1,1) PRIMARY KEY CHECK (BRANCH_ID <=4 ),
COLLEGE_BRANCH VARCHAR(15)  CHECK ( COLLEGE_BRANCH='BCA' OR COLLEGE_BRANCH= 'BBA' OR COLLEGE_BRANCH ='BCOM' OR COLLEGE_BRANCH = 'BTECH' )
);
GO


INSERT INTO COLLEGE_BRANCH 
VALUES 
('BCA'),('BBA'),('BCOM'),('BTECH');
SELECT * FROM COLLEGE_BRANCH
-----------------------------------------------------------------------------------------------------
--START JOIN
--INNER JOIN  
    SELECT * FROM COLLEGE_STUDENT JOIN COLLEGE_TEACHER   
	ON 
	COLLEGE_STUDENT.STD_BRANCH =COLLEGE_TEACHER.TEACHER_BRANCH;

--LEFT JOIN
    SELECT * FROM  COLLEGE_STUDENT LEFT JOIN COLLEGE_TEACHER 
	ON
	COLLEGE_STUDENT.STD_BRANCH =COLLEGE_TEACHER.TEACHER_BRANCH;

--RIGHT JOIN
    SELECT * FROM COLLEGE_TEACHER RIGHT JOIN COLLEGE_STUDENT 
	ON
	COLLEGE_STUDENT.STD_BRANCH =COLLEGE_TEACHER.TEACHER_BRANCH;

--FULL JOIN 
   SELECT * FROM COLLEGE_STUDENT JOIN COLLEGE_TEACHER   
	ON 
	COLLEGE_STUDENT.STD_BRANCH =COLLEGE_TEACHER.TEACHER_BRANCH;

	
--NATURAL JOIN 
	   SELECT * FROM COLLEGE_STUDENT JOIN COLLEGE_TEACHER;
	--MULTYPALTABLE JOIN

SELECT STD_NAME,TEACHER_NAME,COLLEGE_BRANCH
FROM
COLLEGE_TEACHER  
JOIN 
COLLEGE_BRANCH
ON
COLLEGE_TEACHER.TEACHER_BRANCH_ID = COLLEGE_BRANCH.BRANCH_ID
JOIN
COLLEGE_STUDENT 
ON  
COLLEGE_STUDENT.STD_BRANCH =COLLEGE_BRANCH.COLLEGE_BRANCH

SELECT STD_NAME +' SUBJECT IS : '+ STD_BRANCH FROM COLLEGE_STUDENT

SELECT * FROM COLLEGE_STUDENT WHERE STD_ID =1
UPDATE COLLEGE_STUDENT
SET STD_BRANCH = 'SNEH JAISWAL'
WHERE STD_ID =1

SELECT COUNT(STD_AGE) AS [STUDENT AGE] ,STD_NAME 
FROM 
COLLEGE_STUDENT 
GROUP BY
STD_NAME

SELECT COUNT(STD_NAME) ,STD_NAME FROM COLLEGE_STUDENT 



SELECT SUM(STD_ID), STD_NAME ,STD_ADDRESS
FROM COLLEGE_STUDENT

GROUP BY STD_NAME , STD_ADDRESS
SELECT * FROM COLLEGE_STUDENT WHERE STD_NAME = 'SH'



SELECT COUNT(STD_NAME) 
FROM COLLEGE_STUDENT
GROUP BY STD_NAME	


SELECT COUNT(STD_NAME) ,STD_NAME
FROM COLLEGE_STUDENT
GROUP BY STD_NAME	,STD_NAME
HAVING STD_NAME ='OM'


alter table STUDENT_MARKSHEET
DROP COLUMN GRADE 

CREATE TABLE STUDENT_MARKSHEET 
(
ID INT IDENTITY(1,1) ,
NAME VARCHAR(10) NOT NULL,
MATHS INT NOT NULL CHECK (MATHS <=100 AND MATHS >= 0),
HINDI INT NOT NULL CHECK (HINDI <=100 AND HINDI >= 0),
ENGLISH INT NOT NULL CHECK (ENGLISH <=100 AND ENGLISH >= 0),
GRADE varchar(2)
)

INSERT INTO STUDENT_MARKSHEET
VALUES
('RAJ',35,40,20,''),
('RAJ',35,40,20,''),
('RAJ',25,10,10,''),
('RAJ',95,90,80,'');
SELECT * FROM STUDENT_MARKSHEET


UPDATE STUDENT_MARKSHEET SET GRADE = CASE 
WHEN (MATHS + HINDI + ENGLISH) > 180 THEN 'A'	
WHEN (MATHS + HINDI + ENGLISH) > 120 AND (MATHS + HINDI + ENGLISH) <=180 THEN 'B'	
WHEN (MATHS + HINDI + ENGLISH) > 99  AND (MATHS + HINDI + ENGLISH) <=120 THEN 'A'
ELSE 'FAIL'
END

ALTER TABLE STUDENT_MARKSHEET
ADD GRADE VARCHAR(10)

SELECT DISTINCT NAME FROM STUDENT_MARKSHEET
select  * from COPY_TABLE_STUDETN_MARKSHEET

declare @a int , @b int ,@c int
 select @a = 10  , @b = 20 , @c =30
 select @c= @a + @b
 select @c
  select @c, @a , @b
 

SELECT * INTO COPY_TABLE_STUDETN_MARKSHEET FROM interndb.dbo.STUDENT_MARKSHEET

SELECT * FROM SNEH_USERS
BEGIN
    WHILE (select TEACHER_NAME,max(TEACHER_SALARY) from COLLEGE_TEACHER
	group by TEACHER_NAME) > 1000 
	begin 
	PRINT 'salary is abobe 1000'

	break;
	end
	begin

	   print 'ntg'
	   end
END


SELECT * FROM SNEH_USERS
BEGIN
	WHILE (SELECT max(Age) FROM SNEH_USERS ) > 20
	
	BEGIN 
	PRINT 'greter than' + Age	;
	BREAK
	END

END

DECLARE @stud_value INT;  
SET @stud_value = 1;  
WHILE @stud_value <= 5  
 BEGIN  
  PRINT 'Mark Henry';  
  SET @stud_value = @stud_value + 1;  
 END;  
PRINT 'Rose Bennet';  

----------------------------------------------------------------------------------------------------------------------

CREATE TABLE bikeshop  
(  
 Id INT PRIMARY KEY IDENTITY,  
 bike_name VARCHAR (50) NOT NULL,  
 price FLOAT  
)  
DECLARE @count INT;  
SET @count = 1;   
WHILE @count <= 10  
BEGIN  
   INSERT INTO bikeshop VALUES('Bike-' + CAST(@count as varchar), @count*5000)  
   SET @count = @count + 1;  
END;  
select *from  bikeshop;


BEGIN TRY
select 10/5 as 'division'
END TRY

BEGIN CATCH
select  ERROR_MESSAGE() as 'error msg'
END CATCH

ALTER TABLE SNEH_USERS
sp_rename TO new_table_name;

declare @t date = GETDATE();
select GETDATE()
BEGIN
WAITFOR TIME '07:49:29'
print 'Time end';
END

--------------------------------------------------------------------------------------------------------
select * from sneh_Person
--Dynamic Sql



--Dynamic Sql

Declare @table varchar(100)
Declare @colList varchar(100)
Declare @query varchar(1000)

Set @table = 'sneh_Person';
Set @colList = 'Age,Match';
Set @query = CONCAT('select',@colList,'from', @table)
print @query
--Exec (@query)

SELECT SYSDATETIME()  
    ,SYSDATETIMEOFFSET()  
    ,SYSUTCDATETIME()  
    ,CURRENT_TIMESTAMP  
    ,GETDATE()  
    ,GETUTCDATE();  






















